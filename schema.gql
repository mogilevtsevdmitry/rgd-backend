# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input CreateLocationInput {
  geoLan: Float!
  geoLon: Float!
  orderEntityId: Float
  transportEntityId: Float
}

input CreateOrderInput {
  locationEntity: [CreateLocationInput!]!
  orderServiceTypeEntityId: Float
  orderStatusEntityId: Float!
  orderTransportationTypeEntityId: Float
  price: Float!
  qualityOfSeats: Float!
  transportEntityId: Float!
}

input CreateOrderStatusInput {
  color: String
  status: String!
}

input CreateTransportBodyTypeInput {
  type: String!
}

input CreateTransportClassInput {
  class: String!
}

input CreateTransportCommentInput {
  comment: String!
  rating: Float = 5
  transportEntityId: Float!
}

input CreateTransportDescriptionInput {
  description: String!
  rating: Float = 5
  transportEntityId: Float!
}

input CreateTransportInput {
  avgFuelConsumption: Float
  capacity: Float
  clearance: Float
  gosNumber: String!
  height: Float
  length: Float
  maxSpeed: Float
  modification: String!
  quantityOfSeats: Float!
  tankCapacity: Float
  transportBodyTypesEntityId: Float!
  transportClassEntityId: Float
  transportDescriptionEntityId: Float
  transportEngineEntityId: Float!
  transportLayoutEntityId: Float!
  transportOilTypeEntityId: Float
  transportScheduleEntitiesId: Float
  transportStatusesEntityId: Float
  transportTransmissionEntityId: Float
  transportWheelFormulaEntityId: Float!
  weight: Float
  wheelbase: Float
  width: Float
  year: Float!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type LocationEntity {
  geoLan: Float!
  geoLon: Float!
  id: ID!
  orderEntity: OrderEntity
  transportEntity: TransportEntity
}

type Mutation {
  createOrderEntity(createOrderInput: CreateOrderInput!): OrderEntity!
  createOrderServiceTypeEntity(type: String!): OrderServiceTypeEntity!
  createOrderStatusEntity(createOrderStatusInput: CreateOrderStatusInput!): OrderStatusEntity!
  createOrderTransportationTypeEntity(type: String!): OrderTransportationTypeEntity!
  createTransportBodyTypeEntity(createTransportInput: CreateTransportBodyTypeInput!): TransportBodyTypesEntity!
  createTransportClassEntity(createTransportClassInput: CreateTransportClassInput!): TransportClassEntity!
  createTransportCommentEntity(createTransportCommentInput: CreateTransportCommentInput!): TransportCommentEntity!
  createTransportDescriptionEntity(createTransportDescriptionInput: CreateTransportDescriptionInput!): TransportDescriptionEntity!
  createTransportEntity(createTransportInput: CreateTransportInput!): TransportEntity!
  createUser(user: UserInput!): UserEntity!
  login(user: UserInput!): TokensInput!
  register(user: UserInput!): UserEntity!
  removeOrderEntity(id: Float!): OrderEntity!
  removeOrderServiceTypeEntity(id: Float!): OrderServiceTypeEntity!
  removeOrderStatusEntity(id: Float!): OrderStatusEntity!
  removeOrderTransportationTypeEntity(id: Float!): OrderTransportationTypeEntity!
  removeTransportBodyTypeEntity(id: Float!): TransportBodyTypesEntity!
  removeTransportClassEntity(id: Float!): TransportClassEntity!
  removeTransportCommentEntity(id: Float!): TransportCommentEntity!
  removeTransportDescriptionEntity(id: Float!): TransportDescriptionEntity!
  removeTransportEntity(id: Float!): TransportEntity!
  removeUser(id: Float!): UserEntity!
  updateOrderEntity(updateOrderInput: UpdateOrderInput!): OrderEntity!
  updateOrderServiceTypeEntity(orderServiceTypeInput: UpdateOrderServiceTypeInput!): OrderServiceTypeEntity!
  updateOrderStatusEntity(updateOrderStatusInput: UpdateOrderStatusInput!): OrderStatusEntity!
  updateOrderTransportationTypeEntity(updateOrderTransportationTypeInput: UpdateOrderTransportationTypeInput!): OrderTransportationTypeEntity!
  updateTransportBodyTypeEntity(updateTransportInput: UpdateTransportBodyTypeInput!): TransportBodyTypesEntity!
  updateTransportClassEntity(updateTransportClassInput: UpdateTransportClassInput!): TransportClassEntity!
  updateTransportCommentEntity(updateTransportCommentInput: UpdateTransportCommentInput!): TransportCommentEntity!
  updateTransportDescriptionEntity(updateTransportDescriptionInput: UpdateTransportDescriptionInput!): TransportDescriptionEntity!
  updateTransportEntity(updateTransportInput: UpdateTransportInput!): TransportEntity!
}

type OrderEntity {
  createdAt: DateTime!
  id: ID!
  locationEntities: [LocationEntity]
  orderServiceTypeEntity: OrderServiceTypeEntity
  orderStatusEntity: OrderStatusEntity!
  orderTransportationTypeEntity: OrderTransportationTypeEntity
  price: Float!
  qualityOfSeats: Float!
  rating: Float!
  transportEntity: TransportEntity!
  updatedAt: DateTime!
  userEntity: UserEntity!
}

type OrderServiceTypeEntity {
  id: ID!
  orderEntities: [OrderEntity]
  type: String!
}

type OrderStatusEntity {
  color: String
  id: ID!
  orderEntities: [OrderEntity]
  status: String!
}

type OrderTransportationTypeEntity {
  id: ID!
  orderEntities: [OrderEntity]
  type: String!
}

type Query {
  getAllOrderEntity: [OrderEntity!]!
  getAllOrderServiceTypeEntity: [OrderServiceTypeEntity!]!
  getAllOrderStatusEntity: [OrderStatusEntity!]!
  getAllOrderTransportationTypeEntity: [OrderTransportationTypeEntity!]!
  getAllTransportBodyTypeEntity: [TransportBodyTypesEntity!]!
  getAllTransportClassEntity: [TransportClassEntity!]!
  getAllTransportCommentEntity: [TransportCommentEntity!]!
  getAllTransportDescriptionEntity: [TransportDescriptionEntity!]!
  getAllTransportEntity: [TransportEntity!]!
  getAllUsers: [UserEntity!]!
  getOneOrderEntity(id: Float!): OrderEntity!
  getOneOrderServiceTypeEntity(id: Float!): OrderServiceTypeEntity!
  getOneOrderStatusEntity(id: Float!): OrderStatusEntity!
  getOneOrderTransportationTypeEntity(id: Float!): OrderTransportationTypeEntity!
  getOneTransportBodyTypeEntity(id: Float!): TransportBodyTypesEntity!
  getOneTransportClassEntity(id: Float!): TransportClassEntity!
  getOneTransportCommentEntity(id: Float!): TransportCommentEntity!
  getOneTransportDescriptionEntity(id: Float!): TransportDescriptionEntity!
  getOneTransportEntity(id: Float!): TransportEntity!
  updateToken: TokensInput!
  whoAmI: UserEntity!
}

type RefreshTokenEntity {
  exp: Float!
  token: String!
  user: UserEntity!
}

type Token {
  exp: Float!
  token: String!
}

type TokensInput {
  accessToken: Token!
  refreshToken: Token!
  user: UserRes!
}

type TransportBodyTypesEntity {
  id: ID!
  transportEntities: [TransportEntity]
  type: String!
}

type TransportClassEntity {
  class: String!
  id: ID!
  transportEntities: [TransportEntity!]!
}

type TransportCommentEntity {
  comment: String!
  createdAt: DateTime!
  id: ID!
  rating: Float!
  transportEntity: TransportEntity!
  updatedAt: DateTime!
  userEntity: UserEntity!
}

type TransportDescriptionEntity {
  createdAt: DateTime!
  description: String!
  id: ID!
  photo: String
  rating: Float
  transportEntity: TransportEntity
  updatedAt: DateTime!
}

type TransportEngineEntity {
  engine: String!
  id: ID!
  transportEntities: [TransportEntity!]!
}

type TransportEntity {
  avgFuelConsumption: Float
  capacity: Float
  classId: TransportClassEntity
  clearance: Float
  createdAt: DateTime!
  gosNumber: String!
  height: Float
  id: ID!
  length: Float
  locationEntities: [LocationEntity]
  maxSpeed: Float
  modification: String!
  orderEntities: [OrderEntity!]
  quantityOfSeats: Float!
  tankCapacity: Float
  transportBodyTypesEntity: TransportBodyTypesEntity
  transportCommentEntities: [TransportCommentEntity!]!
  transportDescriptionEntity: TransportDescriptionEntity
  transportEngineEntity: TransportEngineEntity
  transportLayoutEntity: TransportLayoutEntity
  transportOilTypeEntity: TransportOilTypeEntity
  transportScheduleEntities: [TransportScheduleEntity!]
  transportStatusesEntity: TransportStatusesEntity!
  transportTransmissionEntity: TransportTransmissionEntity
  transportWheelFormulaEntity: TransportWheelFormulaEntity
  updatedAt: DateTime!
  weight: Float
  wheelbase: Float
  width: Float
  year: Float!
}

type TransportLayoutEntity {
  id: ID!
  layout: String!
  transportEntities: [TransportEntity!]!
}

type TransportOilTypeEntity {
  id: ID!
  oil: String!
  transportEntities: [TransportEntity!]!
}

type TransportScheduleEntity {
  createdAt: DateTime!
  dateFor: DateTime!
  dateTo: DateTime!
  id: ID!
  transportEntity: TransportEntity!
  updatedAt: DateTime!
  userEntity: UserEntity!
}

type TransportStatusesEntity {
  color: String!
  id: ID!
  status: String!
  transportEntities: [TransportEntity!]!
}

type TransportTransmissionEntity {
  id: ID!
  transmission: String!
  transportEntities: [TransportEntity!]!
}

type TransportWheelFormulaEntity {
  id: ID!
  title: String!
  transportEntities: [TransportEntity!]!
}

input UpdateLocationInput {
  geoLan: Float!
  geoLon: Float!
  id: ID!
}

input UpdateOrderInput {
  id: ID!
  price: Float!
  qualityOfSeats: Float!
  rating: Float = 5
  updateLocationInput: UpdateLocationInput!
}

input UpdateOrderServiceTypeInput {
  id: ID!
  type: String!
}

input UpdateOrderStatusInput {
  color: String = "#ffffff"
  id: ID!
  status: String!
}

input UpdateOrderTransportationTypeInput {
  id: ID!
  type: String!
}

input UpdateTransportBodyTypeInput {
  id: ID!
  type: String!
}

input UpdateTransportClassInput {
  class: String!
  id: ID!
}

input UpdateTransportCommentInput {
  comment: String!
  id: ID!
  rating: Float = 5
}

input UpdateTransportDescriptionInput {
  description: String!
  id: ID!
  rating: Float = 5
}

input UpdateTransportInput {
  avgFuelConsumption: Float
  capacity: Float
  clearance: Float
  gosNumber: String!
  height: Float
  id: ID!
  length: Float
  maxSpeed: Float
  modification: String!
  quantityOfSeats: Float!
  tankCapacity: Float
  transportBodyTypesEntityId: Float!
  transportClassEntityId: Float
  transportDescriptionEntityId: Float
  transportEngineEntityId: Float!
  transportLayoutEntityId: Float!
  transportOilTypeEntityId: Float
  transportScheduleEntitiesId: Float
  transportStatusesEntityId: Float
  transportTransmissionEntityId: Float
  transportWheelFormulaEntityId: Float!
  weight: Float
  wheelbase: Float
  width: Float
  year: Float!
}

type UserEntity {
  activateHash: String
  createdAt: DateTime!
  createdBy: String
  email: String!
  firstName: String
  id: ID!
  isActivated: Boolean!
  lastName: String
  orderEntities: [OrderEntity!]!
  password: String
  phone: String
  photo: String
  roles: String
  sex: String
  token: [RefreshTokenEntity!]
  transportCommentEntities: [TransportCommentEntity!]!
  transportScheduleEntities: [TransportScheduleEntity!]!
  updatedAt: DateTime!
}

input UserInput {
  email: String!
  password: String!
}

type UserRes {
  email: String!
  role: String!
}
