# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input CreateLocationInput {
  geoLan: Float!
  geoLon: Float!
  orderEntityId: Float
  transportEntityId: Float
}

input CreateOrderInput {
  locationEntity: [CreateLocationInput!]!
  orderServiceTypeEntityId: Float
  orderStatusEntityId: Float!
  orderTransportationTypeEntityId: Float
  price: Float!
  qualityOfSeats: Float!
  rating: Float = 5
  transportEntityId: Float!
  userEntityId: Float!
}

input CreateOrderStatusInput {
  color: String
  status: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type LocationEntity {
  geoLan: Float!
  geoLon: Float!
  id: ID!
  orderEntity: OrderEntity
  transportEntity: TransportEntity
}

type Mutation {
  createOrderEntity(createOrderInput: CreateOrderInput!): OrderEntity!
  createOrderServiceTypeEntity(type: String!): OrderServiceTypeEntity!
  createOrderStatusEntity(createOrderStatusInput: CreateOrderStatusInput!): OrderStatusEntity!
  createOrderTransportationTypeEntity(type: String!): OrderTransportationTypeEntity!
  createUser(user: UserInput!): UserEntity!
  login(user: UserInput!): TokensInput!
  register(user: UserInput!): UserEntity!
  removeOrderEntity(id: Float!): OrderEntity!
  removeOrderServiceTypeEntity(id: Float!): OrderServiceTypeEntity!
  removeOrderStatusEntity(id: Float!): OrderStatusEntity!
  removeOrderTransportationTypeEntity(id: Float!): OrderTransportationTypeEntity!
  removeUser(id: Float!): UserEntity!
  updateOrderEntity(updateOrderInput: UpdateOrderInput!): OrderEntity!
  updateOrderServiceTypeEntity(orderServiceTypeInput: UpdateOrderServiceTypeInput!): OrderServiceTypeEntity!
  updateOrderStatusEntity(updateOrderStatusInput: UpdateOrderStatusInput!): OrderStatusEntity!
  updateOrderTransportationTypeEntity(updateOrderTransportationTypeInput: UpdateOrderTransportationTypeInput!): OrderTransportationTypeEntity!
}

type OrderEntity {
  createdAt: DateTime!
  id: ID!
  locationEntities: [LocationEntity]
  orderServiceTypeEntity: OrderServiceTypeEntity
  orderStatusEntity: OrderStatusEntity!
  orderTransportationTypeEntity: OrderTransportationTypeEntity
  price: Float!
  qualityOfSeats: Float!
  rating: Float!
  transportEntity: TransportEntity!
  updatedAt: DateTime!
  userEntity: UserEntity!
}

type OrderServiceTypeEntity {
  id: ID!
  orderEntities: [OrderEntity]
  type: String!
}

type OrderStatusEntity {
  color: String
  id: ID!
  orderEntities: [OrderEntity]
  status: String!
}

type OrderTransportationTypeEntity {
  id: ID!
  orderEntities: [OrderEntity]
  type: String!
}

type Query {
  getAllOrderEntity: [OrderEntity!]!
  getAllOrderServiceTypeEntity: [OrderServiceTypeEntity!]!
  getAllOrderStatusEntity: [OrderStatusEntity!]!
  getAllOrderTransportationTypeEntity: [OrderTransportationTypeEntity!]!
  getAllUsers: [UserEntity!]!
  getOneOrderEntity(id: Float!): OrderEntity!
  getOneOrderServiceTypeEntity(id: Float!): OrderServiceTypeEntity!
  getOneOrderStatusEntity(id: Float!): OrderStatusEntity!
  getOneOrderTransportationTypeEntity(id: Float!): OrderTransportationTypeEntity!
  updateToken: TokensInput!
  whoAmI: UserEntity!
}

type RefreshTokenEntity {
  exp: Float!
  token: String!
  user: UserEntity!
}

type Token {
  exp: Float!
  token: String!
}

type TokensInput {
  accessToken: Token!
  refreshToken: Token!
}

type TransportBodyTypesEntity {
  id: ID!
  transportEntities: [TransportEntity!]!
  type: String!
}

type TransportClassEntity {
  class: String!
  id: ID!
  transportEntities: [TransportEntity!]!
}

type TransportCommentEntity {
  comment: String!
  createdAt: DateTime!
  id: ID!
  rating: Float!
  transportEntity: TransportEntity!
  updatedAt: DateTime!
  userEntity: UserEntity!
}

type TransportDescriptionEntity {
  createdAt: DateTime!
  description: String
  id: ID!
  photo: String
  rating: Float
  transportEntity: TransportEntity!
  updatedAt: DateTime!
}

type TransportEngineEntity {
  engine: String!
  id: ID!
  transportEntities: [TransportEntity!]!
}

type TransportEntity {
  avg_fuel_consumption: Float
  body_typeId: TransportBodyTypesEntity
  capacity: Float
  classId: TransportClassEntity
  clearance: Float
  createdAt: DateTime!
  gos_number: Float!
  height: Float
  id: ID!
  length: Float
  locationEntities: [LocationEntity]
  max_speed: Float
  modification: String!
  orderEntities: [OrderEntity!]
  quantity_of_seats: Float!
  tank_capacity: Float
  transportCommentEntities: [TransportCommentEntity!]!
  transportDescriptionEntity: TransportDescriptionEntity!
  transportEngineEntity: TransportEngineEntity
  transportLayoutEntity: TransportLayoutEntity
  transportOilTypeEntity: TransportOilTypeEntity
  transportScheduleEntities: [TransportScheduleEntity!]!
  transportStatusesEntity: TransportStatusesEntity!
  transportTransmissionEntity: TransportTransmissionEntity
  transportWheelFormulaEntity: TransportWheelFormulaEntity
  updatedAt: DateTime!
  weight: Float
  wheelbase: Float
  width: Float
  year: Float!
}

type TransportLayoutEntity {
  id: ID!
  layout: String!
  transportEntities: [TransportEntity!]!
}

type TransportOilTypeEntity {
  id: ID!
  oil: String!
  transportEntities: [TransportEntity!]!
}

type TransportScheduleEntity {
  createdAt: DateTime!
  dateFor: DateTime!
  dateTo: DateTime!
  id: ID!
  transportEntity: TransportEntity!
  updatedAt: DateTime!
  userEntity: UserEntity!
}

type TransportStatusesEntity {
  color: String!
  id: ID!
  status: String!
  transportEntities: [TransportEntity!]!
}

type TransportTransmissionEntity {
  id: ID!
  transmission: String!
  transportEntities: [TransportEntity!]!
}

type TransportWheelFormulaEntity {
  id: ID!
  title: String!
  transportEntities: [TransportEntity!]!
}

input UpdateLocationInput {
  geoLan: Float!
  geoLon: Float!
  id: ID!
}

input UpdateOrderInput {
  id: ID!
  price: Float!
  qualityOfSeats: Float!
  rating: Float = 5
  updateLocationInput: UpdateLocationInput!
}

input UpdateOrderServiceTypeInput {
  id: ID!
  type: String!
}

input UpdateOrderStatusInput {
  color: String = "#ffffff"
  id: ID!
  status: String!
}

input UpdateOrderTransportationTypeInput {
  id: ID!
  type: String!
}

type UserEntity {
  activateHash: String
  createdAt: DateTime!
  createdBy: String
  email: String!
  firstName: String
  id: ID!
  isActivated: Boolean!
  lastName: String
  orderEntities: [OrderEntity!]!
  password: String
  phone: String
  photo: String
  roles: String
  sex: String
  token: [RefreshTokenEntity!]
  transportCommentEntities: [TransportCommentEntity!]!
  transportScheduleEntities: [TransportScheduleEntity!]!
  updatedAt: DateTime!
}

input UserInput {
  email: String!
  password: String!
}
